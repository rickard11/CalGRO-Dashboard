---
title: "Hydrographs"
format: 
  dashboard: 
    logo: "logo/brenlogo.png"
      orientation: columns
---

# Randall

## Column{width="50%"}

### Row {height="33%"}

```{r, PandD}
library(tidyverse)
library(plotly)             
#library(reactable)
#library(bslib)
library(dplyr)
#library(leaflet)
#library(bsicons)
#library(shiny)
library(ggplot2)
library(readr)
r<-read.csv("data/hourly_well_data.csv")
r$Date<-as.Date(r$Date)
r$Date.and.Time<-as.POSIXct(r$Date.and.Time)
```

```{r, LowerTweedy}
ltwell<-r[r$Well_Name=="Lower Tweedy",]
ltrain<-read.csv("data/rain/Randall Lower tweedy rain gauge Rain Gauge 20250301-20250527.csv")
ltrain$Date<-as.Date(ltrain$Date)
ltall<-merge(ltwell,ltrain,by="Date",all.x=TRUE,all.y=TRUE)
ltall$Date.and.Time<-as.POSIXct(ltall$Date.and.Time)


ltrain<-ltrain[ltrain$Date<="2025-05-01",]
hourly_data<-ltwell
daily_data<-ltrain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

# Get x-axis range
x_range <- range(combined$Date.and.Time)

# Create hline data manually
hline_data <- data.frame(
  variable = "Water Depth",
  x = x_range[1],
  xend = x_range[2],
  y = c(-18.99, 2.34),
  yend = c(-18.99, 2.34),
  color = c("green4", "red3"),
  alpha = c(0.5, 0.5)
)

p <- ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse() +
  geom_segment(
    data = hline_data,
    aes(x = x, xend = xend, y = y, yend = yend),
    inherit.aes = FALSE,
    color = hline_data$color,
    linetype = "dashed",
    alpha = hline_data$alpha
  ) +
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Lower Tweedy Well Depth and Rainfall") +
  theme_minimal()

# Convert to interactive plot
ggplotly(p)
```

### Row {height="33%"}
```{r, CactusPasture}

cprain<-read.csv("data/rain/Randall cactus pasture rain gauge Rain Gauge 20250301-20250527.csv")
cpwell<-r[r$Well_Name=="Cactus pasture",]
cpall<-merge(cpwell,cprain,by="Date",all.x=TRUE,all.y=TRUE)


cprain<-cprain[cprain$Date<="2025-05-01",]
hourly_data<-cpwell
daily_data<-cprain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

x_range <- range(combined$Date.and.Time)
# Create hline data manually
hline_data <- data.frame(
  variable = "Water Depth",
  x = x_range[1],
  xend = x_range[2],
  y = c(8.64, 18.34),
  yend = c(8.64, 18.34),
  color = c("green4", "red3"),
  alpha = c(0.5, 0.5)
)

p <- ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse() +
  geom_segment(
    data = hline_data,
    aes(x = x, xend = xend, y = y, yend = yend),
    inherit.aes = FALSE,
    color = hline_data$color,
    linetype = "dashed",
    alpha = hline_data$alpha
  ) +
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Cactus Pasture Well Depth and Rainfall") +
  theme_minimal()

# Convert to interactive plot
ggplotly(p)
```

### Row {height="33%"}
```{r,BCWell}

bcrain<-read.csv("data/rain/Randall B and C Ranch. Rain gauge Rain Gauge 20250301-20250527.csv")
bcwell<-r[r$Well_Name=="B&C Ranch Well",]
bcall<-merge(bcwell,bcrain,by="Date",all.x=TRUE,all.y=TRUE)

bcrain<-bcrain[bcrain$Date<="2025-05-01",]
hourly_data<-bcwell
daily_data<-bcrain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)
x_range <- range(combined$Date.and.Time)
# Create hline data manually
hline_data <- data.frame(
  variable = "Water Depth",
  x = x_range[1],
  xend = x_range[2],
  y = c(74.97, 78.78),
  yend = c(74.97, 78.78),
  color = c("green4", "red3"),
  alpha = c(0.5, 0.5)
)

p <- ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse() +
  geom_segment(
    data = hline_data,
    aes(x = x, xend = xend, y = y, yend = yend),
    inherit.aes = FALSE,
    color = hline_data$color,
    linetype = "dashed",
    alpha = hline_data$alpha
  ) +
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "B & C Well Depth and Rainfall") +
  theme_minimal()

# Convert to interactive plot
ggplotly(p)

```

## Column{width="50%"}

### Row {height="33%"}
Lower Tweedy Recharge:
03/12 = 2.34
04/18 = -18.99

```{r, LowerTweedyRecharge}
LTRe<-2.34-(-18.99)
print(LTRe)
```

### Row {height="33%"}
Cactus Pasture Recharge:
03/12 18.34
04/30 8.64
```{r, CactusPastureRecharge}
#Inches of Rain
#sum(cprain$Rain..in.)
#Feet of Recharge
#ftre<-(max(cpwell$ft..below.ground.)-min(cpwell$ft..below.ground.))*0.1
#Inches Recharge equivilent
#inre<-ftre*12
#inre
CPRe<-18.34-8.64
print(CPRe)

```

### Row {height="33%"}
B & C Ranch Well Recharge:
03/12 78.78
04/27 74.97
```{r, BandCRecharge}
#Inches of Rain
#sum(bcrain$Rain..in.)
#Feet of Recharge
#ftre<-(78.85-74.97)*0.1
#Inches Recharge equivilent
#inre<-ftre*12
#inre
BCRe<-78.78-74.97
print(BCRe)
```

# Santa Cruz Island

```{r,SCI}

scirain<-read.csv("data/rain/Prisoners wells Rain Gauge 20250301-20250530.csv")
sciwell<-r[r$Well_Name=="Prisoners Harbor Well",]
scirain<-scirain[scirain$Date<="2025-05-13",]
sciall<-merge(sciwell,scirain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-sciwell
daily_data<-scirain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)
x_range <- range(combined$Date.and.Time)
# Create hline data manually
hline_data <- data.frame(
  variable = "Water Depth",
  x = x_range[1],
  xend = x_range[2],
  y = c(10.81, 12.62),
  yend = c(10.81, 12.62),
  color = c("green4", "red3"),
  alpha = c(0.5, 0.5)
)

p <- ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse() +
  geom_segment(
    data = hline_data,
    aes(x = x, xend = xend, y = y, yend = yend),
    inherit.aes = FALSE,
    color = hline_data$color,
    linetype = "dashed",
    alpha = hline_data$alpha
  ) +
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Lower Tweedy Well Depth and Rainfall") +
  theme_minimal()

# Convert to interactive plot
ggplotly(p)
```


# Dangermond Preserve

## Column{width="50%"}

### Row {height="33%"}
```{r, E5}
E5rain<-read.csv("data/rain/Dangermond- Escondido 5 new Rain Gauge 20231001-20250417.csv")
E5well<-r[r$Well_Name=="Escondido 5",]
E5rain<-E5rain[E5rain$Date<="2025-05-13",]
E5all<-merge(E5well,E5rain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-E5well
daily_data<-E5rain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Escondido 5 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```

Escondido 5 Recharge: 
10/29 59.34
03/17 56.53

```{r}
E5Re<-59.34-56.53
preint(E5Re)
```

### Row {height="33%"}
```{r, E3}
E3rain<-read.csv("data/rain/Dangermond- Escondido 3 Rain Gauge 20240131-20250401.csv")
E3well<-r[r$Well_Name=="Escondido 3",]
E3rain<-E3rain[E3rain$Date<="2025-05-13",]
E3all<-merge(E3well,E3rain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-E3well
daily_data<-E3rain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Escondido 3 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="33%"}
```{r, E2}
E2rain<-read.csv("data/rain/Dangermond- Escondido 2 Rain Gauge 20231101-20250408.csv")
E2well<-r[r$Well_Name=="Escondido 2",]
E2rain<-E2rain[E2rain$Date<="2025-05-13",]
E2all<-merge(E2well,E2rain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-E2well
daily_data<-E2rain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Escondido 2 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
## Column{width="50%"}

### Row {height="33%"}
```{r, O5}
O5rain<-read.csv("data/rain/Dangermond- Oaks 5 Rain Gauge 20240131-20250401.csv")
O5well<-r[r$Well_Name=="Oaks 5",]
O5rain<-O5rain[O5rain$Date<="2025-05-13",]
O5all<-merge(O5well,O5rain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-O5well
daily_data<-O5rain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Oaks 5 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="33%"}
```{r, T3}
T3rain<-read.csv("data/rain/Dangermond- Tinta 3  Rain Gauge 20241001-20250214.csv")
T3well<-r[r$Well_Name=="Tinta 3",]
T3rain<-T3rain[T3rain$Date<="2025-05-13",]
T3all<-merge(T3well,T3rain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-T3well
daily_data<-T3rain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Tinta 3 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="33%"}
```{r, T5}
T5rain<-read.csv("data/rain/Dangermond- Tinta 5 Rain Gauge 20240101-20250409.csv")
T5well<-r[r$Well_Name=="Tinta 5",]
T5rain<-T5rain[T5rain$Date<="2025-05-13",]
T5all<-merge(T5well,T5rain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-T5well
daily_data<-T5rain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Tinta 5 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
## Column{width="50%"}

### Row {height="33%"}
```{r, T6}
T6rain<-read.csv("data/rain/Dangermond- Tinta 6 Rain Gauge 20231101-20250408.csv")
T6well<-r[r$Well_Name=="Tinta 6",]
T6rain<-T6rain[T6rain$Date<="2025-05-13",]
T6all<-merge(T6well,T6rain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-T6well
daily_data<-T6rain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Tinta 6 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="33%"}
```{r, T10}
T10rain<-read.csv("data/rain/Dangermond- Tinta 10 Rain Gauge 20231201-20250408.csv")
T10well<-r[r$Well_Name=="Tinta 10",]
T10rain<-T10rain[T10rain$Date<="2025-05-13",]
T10all<-merge(T10well,T10rain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-T10well
daily_data<-T10rain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Tinta 10 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="33%"}
```{r, WC}
WCrain<-read.csv("data/rain/Dangermond- Wood Canyon Rain Gauge 20241001-20250408.csv")
WCwell<-r[r$Well_Name=="Wood Canyon",]
WCrain<-WCrain[WCrain$Date<="2025-05-13",]
WCall<-merge(WCwell,WCrain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-WCwell
daily_data<-WCrain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Wood Canyon Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```

# Parks Creek

```{r, Parkscreek}
pcrain<-read.csv("data/rain/Parks Creek Well Rain Gauge 20250101-20250530.csv")
pcwell<-r[r$Well_Name=="Parks Creek Well",]
pcrain<-pcrain[pcrain$Date<="2025-05-13",]
pcall<-merge(pcwell,pcrain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-pcwell
daily_data<-pcrain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)
x_range <- range(combined$Date.and.Time)
# Create hline data manually
hline_data <- data.frame(
  variable = "Water Depth",
  x = x_range[1],
  xend = x_range[2],
  y = c(8.05, 3.58),
  yend = c(8.05, 3.58),
  color = c("green4", "red3"),
  alpha = c(0.5, 0.5)
)

p <- ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse() +
  geom_segment(
    data = hline_data,
    aes(x = x, xend = xend, y = y, yend = yend),
    inherit.aes = FALSE,
    color = hline_data$color,
    linetype = "dashed",
    alpha = hline_data$alpha
  ) +
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Parks Creek Well Depth and Rainfall") +
  theme_minimal()

# Convert to interactive plot
ggplotly(p)
```

Parks Creek Recharge:
04/04 3.58
05/13 8.05

```{r, Parkscreekrecharge}
PCRe<-3.58-8.05
print(PCRe)
```

# Santa Clara River
```{r, aflalo}
Arain<-read.csv("data/rain/Aflalo Rain Gauge 20250508-20250530.csv")
Awell<-r[r$Well_Name=="Aflalo",]
Arain<-Arain[Arain$Date<="2025-05-13",]
pcall<-merge(Awell,Arain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-Awell
daily_data<-Arain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Aflalo Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```

```{r, Hanson Retired}
Hrain<-read.csv("data/rain/Hanson Retired Rain Gauge 20250508-20250530.csv")
Hwell<-r[r$Well_Name=="Hanson Retired Well",]
Hrain<-Hrain[Hrain$Date<="2025-05-13",]
pcall<-merge(Hwell,Hrain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-Hwell
daily_data<-Hrain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Hanson Retired Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```

# Las Piletas

## Column{width="50%"}

### Row {height="33%"}
```{r, Cooper}
Crain<-read.csv("data/rain/Las Piletas Cooper Rain Gauge 20241205-20250214.csv")
Cwell<-r[r$Well_Name=="Cooper",]
Crain<-Crain[Crain$Date<="2025-05-13",]
pcall<-merge(Cwell,Crain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-Cwell
daily_data<-Crain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)
x_range <- range(combined$Date.and.Time)
# Create hline data manually
hline_data <- data.frame(
  variable = "Water Depth",
  x = x_range[1],
  xend = x_range[2],
  y = c(28.37, 29.63),
  yend = c(28.37, 29.63),
  color = c("green4", "red3"),
  alpha = c(0.5, 0.5)
)

p <- ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse() +
  geom_segment(
    data = hline_data,
    aes(x = x, xend = xend, y = y, yend = yend),
    inherit.aes = FALSE,
    color = hline_data$color,
    linetype = "dashed",
    alpha = hline_data$alpha
  ) +
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Cooper Well Depth and Rainfall") +
  theme_minimal()

# Convert to interactive plot
ggplotly(p)
```
### Row {height="33%"}
```{r, NECorner}
NErain<-read.csv("data/rain/Las Piletas NE Corner Rain Gauge Rain Gauge 20241211-20250530.csv")
NEwell<-r[r$Well_Name=="NE Corner",]
NErain<-NErain[NErain$Date<="2025-05-13",]
pcall<-merge(NEwell,NErain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-NEwell
daily_data<-NErain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)
x_range <- range(combined$Date.and.Time)
# Create hline data manually
hline_data <- data.frame(
  variable = "Water Depth",
  x = x_range[1],
  xend = x_range[2],
  y = c(14.23, 14.48),
  yend = c(14.23, 14.48),
  color = c("green4", "red3"),
  alpha = c(0.5, 0.5)
)

p <- ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse() +
  geom_segment(
    data = hline_data,
    aes(x = x, xend = xend, y = y, yend = yend),
    inherit.aes = FALSE,
    color = hline_data$color,
    linetype = "dashed",
    alpha = hline_data$alpha
  ) +
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "NE Corner Well Depth and Rainfall") +
  theme_minimal()

# Convert to interactive plot
ggplotly(p)
```
### Row {height="33%"}
```{r, Windmill}
Wrain<-read.csv("data/rain/Las Piletas Windmill Rain Gauge Rain Gauge 20250224-20250530.csv")
Wwell<-r[r$Well_Name=="Windmill",]
Wrain<-Wrain[Wrain$Date<="2025-05-13",]
pcall<-merge(Wwell,Wrain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-Wwell
daily_data<-Wrain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)
x_range <- range(combined$Date.and.Time)
# Create hline data manually
hline_data <- data.frame(
  variable = "Water Depth",
  x = x_range[1],
  xend = x_range[2],
  y = c(35.97, 35.17),
  yend = c(35.97, 35.17),
  color = c("green4", "red3"),
  alpha = c(0.5, 0.5)
)

p <- ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse() +
  geom_segment(
    data = hline_data,
    aes(x = x, xend = xend, y = y, yend = yend),
    inherit.aes = FALSE,
    color = hline_data$color,
    linetype = "dashed",
    alpha = hline_data$alpha
  ) +
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Windmill Well Depth and Rainfall") +
  theme_minimal()

# Convert to interactive plot
ggplotly(p)
```
## Column{width="50%"}

### Row {height="33%"}
Cooper Recharge:
12/13 29.63
04/10 28.37
```{r,CooperRecharge}
CORE<-29.83-28.37
print(CORE)
```

### Row {height="33%"}
NE Corner Recharge:
12/13 14.48
05/05 14.23

```{r,NEcornerRecharge}
NERe<-14.48-14.23
print(NERe)
```

### Row {height="33%"}
Windmill Recharge:
02/28 35.97
05/04 35.17
```{r, WindmillRecharge}
WRe<-35.97-35.17
print(WRe)
```


# Tulare
```{r,Tulare}
PTrain<-read.csv("data/rain/Pixley_Tulare Rain Gauge Rain Gauge 20241213-20250530.csv")
PTwell<-r[r$Well_Name=="Pixley Tulare",]
PTrain<-PTrain[PTrain$Date<="2025-05-13",]
pcall<-merge(PTwell,PTrain,by="Date",all.x=TRUE,all.y=TRUE)
hourly_data<-PTwell
daily_data<-PTrain

# Prepare data for faceting
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)
x_range <- range(combined$Date.and.Time)
# Create hline data manually
hline_data <- data.frame(
  variable = "Water Depth",
  x = x_range[1],
  xend = x_range[2],
  y = c(171, 184.12),
  yend = c(171, 184.12),
  color = c("green4", "red3"),
  alpha = c(0.5, 0.5)
)

p <- ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse() +
  geom_segment(
    data = hline_data,
    aes(x = x, xend = xend, y = y, yend = yend),
    inherit.aes = FALSE,
    color = hline_data$color,
    linetype = "dashed",
    alpha = hline_data$alpha
  ) +
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Tulare Well Depth and Rainfall") +
  theme_minimal()

# Convert to interactive plot
ggplotly(p)
```

### Row {height="33%"}
Tulare Recharge:
12/24 184.12
03/24 171
```{r, TulareRecharge}
TRe<-184.12-171
print(TRe)
```
