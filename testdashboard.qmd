---
title: "CalGRO-Recharge"
format: 
  dashboard: 
    orientation: columns
---

## Column{width="50%"}

### Row {height="33%"}

```{r, loadpackages}
#load packages that are needed for all dashboards
library(tidyverse)
library(plotly)             
#library(reactable)
#library(bslib)
library(dplyr)
#library(leaflet)
#library(bsicons)
#library(shiny)
library(ggplot2)
library(readr)
set.seed(4242)
```


```{r, loaddatastats}
#Plotting daily increase or decrease in water depth
# Need to reverse because right now "decrease" is actually good recharge but plotted as bad water drawdown
gwallhr <- read.csv("data/hourly_well_data.csv")
gwallhr$Date.and.Time <- as.POSIXct(gwallhr$Date.and.Time, format = "%Y-%m-%d %H:%M:%S")

df<-gwallhr
colnames(df)<-c("FID","DateTime","WaterDepth","Date","Site")
# Ensure datetime column is in proper POSIXct format
df$DateTime <- as.POSIXct(df$DateTime)

# Add a Date column
df <- df %>%
  mutate(Date = as.Date(DateTime))

# Group by Site and Date, compute daily mean and SD
daily_stats <- df %>%
  group_by(Site, Date) %>%
  summarize(
    DailyAvgDepth = mean(WaterDepth, na.rm = TRUE),
    DailySD = sd(WaterDepth, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  arrange(Site, Date)

# Remove the first two days per site
daily_stats <- daily_stats %>%
  group_by(Site) %>%
  slice(-(1:2)) %>%
  ungroup()

# Calculate the change in daily average water depth (per site)
daily_stats <- daily_stats %>%
  group_by(Site) %>%
  mutate(
    DailyChange = DailyAvgDepth - lag(DailyAvgDepth)
  ) %>%
  ungroup()
daily_stats$DailyChangerev<-daily_stats$DailyChange*-1
```

```{r,plotone}
#Cactus pasture only
CPDS<-daily_stats[daily_stats$Site=="Cactus pasture",]
CPDS$Base_Depth<-CPDS$DailyAvgDepth[1]
CPDS$Depth_Diff<-CPDS$DailyAvgDepth-CPDS$Base_Depth
CPDS$Depth_Diff_rev<-CPDS$Depth_Diff*-1

s<-ggplot(CPDS, aes(x = Date, y = DailyChangerev)) +
  geom_bar(stat = "identity", fill = ifelse(CPDS$DailyChangerev> 0, "blue", "red"), width = 0.7) +
  geom_line(aes(y=Depth_Diff_rev))+
  scale_y_continuous(breaks = seq(-10, 10, 2)) +
  theme_bw()
ggplotly(s)

```

### Row {height="33%"}

```{r,plottwo}
#B&C well only
BCDS<-daily_stats[daily_stats$Site=="B&C Ranch Well",]
BCDS$Base_Depth<-BCDS$DailyAvgDepth[1]
BCDS$Depth_Diff<-BCDS$DailyAvgDepth-BCDS$Base_Depth
BCDS$Depth_Diff_rev<-BCDS$Depth_Diff*-1

b<-ggplot(BCDS, aes(x = Date, y = DailyChangerev)) +
  geom_bar(stat = "identity", fill = ifelse(BCDS$DailyChangerev> 0, "blue", "red"), width = 0.7) +
  geom_line(aes(y=Depth_Diff_rev))+
  scale_y_continuous(breaks = seq(-10, 10, 2)) +
  theme_bw()
ggplotly(b)

```

### Row {height="33%"}

```{r,plotthree}
#Cooper only
CDS<-daily_stats[daily_stats$Site=="Cooper",]
CDS$Base_Depth<-CDS$DailyAvgDepth[1]
CDS$Depth_Diff<-CDS$DailyAvgDepth-CDS$Base_Depth
CDS$Depth_Diff_rev<-CDS$Depth_Diff*-1

c<-ggplot(CDS, aes(x = Date, y = DailyChangerev)) +
  geom_bar(stat = "identity", fill = ifelse(CDS$DailyChangerev> 0, "blue", "red"), width = 0.7) +
  geom_line(aes(y=Depth_Diff_rev))+
  scale_y_continuous(breaks = seq(-10, 10, 2)) +
  theme_bw()
ggplotly(c)

```
## Column{width="50%"}

### Row {height="33%"}


```{r,plotfour}
#Lower Tweedy
LDS<-daily_stats[daily_stats$Site=="Lower Tweedy",]
LDS$Base_Depth<-LDS$DailyAvgDepth[1]
LDS$Depth_Diff<-LDS$DailyAvgDepth-LDS$Base_Depth
LDS$Depth_Diff_rev<-LDS$Depth_Diff*-1

l<-ggplot(LDS, aes(x = Date, y = DailyChangerev)) +
  geom_bar(stat = "identity", fill = ifelse(LDS$DailyChangerev> 0, "blue", "red"), width = 0.7) +
  geom_line(aes(y=Depth_Diff_rev))+
  scale_y_continuous(breaks = seq(-10, 10, 2)) +
  theme_bw()
ggplotly(l)

```


### Row {height="33%"}


```{r,plotfive}
#NE Corner Only
NEDS<-daily_stats[daily_stats$Site=="NE Corner",]
NEDS$Base_Depth<-NEDS$DailyAvgDepth[1]
NEDS$Depth_Diff<-NEDS$DailyAvgDepth-NEDS$Base_Depth
NEDS$Depth_Diff_rev<-NEDS$Depth_Diff*-1

n<-ggplot(NEDS, aes(x = Date, y = DailyChangerev)) +
  geom_bar(stat = "identity", fill = ifelse(NEDS$DailyChangerev> 0, "blue", "red"), width = 0.7) +
  geom_line(aes(y=Depth_Diff_rev))+
  scale_y_continuous(breaks = seq(-10, 10, 2)) +
  theme_bw()
ggplotly(n)

```

### Row {height= "33%"}

```{r,plotsix}
#Pixley Only
PDS<-daily_stats[daily_stats$Site=="Pixley Tulare",]
PDS$Base_Depth<-PDS$DailyAvgDepth[1]
PDS$Depth_Diff<-PDS$DailyAvgDepth-PDS$Base_Depth
PDS$Depth_Diff_rev<-PDS$Depth_Diff*-1

p<-ggplot(PDS, aes(x = Date, y = DailyChangerev)) +
  geom_bar(stat = "identity", fill = ifelse(PDS$DailyChangerev> 0, "blue", "red"), width = 0.7) +
  geom_line(aes(y=Depth_Diff_rev))+
  scale_y_continuous(breaks = seq(-10, 10, 2)) +
  theme_bw()
ggplotly(p)

```

