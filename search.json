[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The CalGRO project is about monitoring groundwater depth and measuring rainfall quantity with a high spatial resolution.\nThere are many different tabs that will be changing as this site is currently under construction. The end goal is to have automated groundwater level updates every day and to be able to calculate groundwater recharge from the water level data."
  },
  {
    "objectID": "Rain_intensity_well_rise_scatter.html",
    "href": "Rain_intensity_well_rise_scatter.html",
    "title": "Welldepth_rainfall_scatter_1dlag",
    "section": "",
    "text": "#Loading packages\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dataRetrieval)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# Water depth\n#Uploading rain data\n\n\n#Uploading rain data\nE3R&lt;-read.csv(\"data/rain/Dangermond- Escondido 3 Rain Gauge 20240131-20250401.csv\")\nE3R$Date&lt;-as.POSIXct(E3R$Date, format=\"%Y-%m-%d\")\nE3R&lt;-E3R %&gt;% arrange(E3R$Date)\nE3R$Location&lt;-\"Escondido 3\"\n\n#Uploading well data\nE3W&lt;-read.csv(\"data/Well/Dangermond- Escondido 3 Well 20240101-20250214.csv\")\nE3W$Date.and.Time&lt;-as.POSIXct(E3W$Date.and.Time,format=\"%Y-%m-%d %H:%M:%S\")\nE3W$Date&lt;-format(E3W$Date.and.Time,format=\"%Y-%m-%d\")\nE3W$Date&lt;-as.POSIXct(E3W$Date,format=\"%Y-%m-%d\")\nE3W&lt;-E3W[E3W$ft..below.ground.&lt;70,]\n\n\n#Preparing to make scatter plot of change in well depth~total storm rainfall\n# Create storm number for days with more than 0.1 in of rain\nE3_rain_data &lt;- E3R %&gt;%\n  mutate(\n    rainy = Rain..in. &gt; 0.15,\n    gap = !rainy,  # identifies dry days\n    storm_group = cumsum(lag(gap, default = TRUE) & rainy)  # increment on first rainy day after dry\n  ) %&gt;%\n  mutate(\n    storm_number = ifelse(rainy, storm_group, NA)  # only assign storm number to rainy days\n  )\n\nE3_rain_data &lt;- E3_rain_data %&gt;%\n  filter(!is.na(storm_number))\n\n\nextra_days &lt;- E3_rain_data %&gt;%\n  group_by(storm_number) %&gt;%\n  slice_tail(n = 1) %&gt;%\n  mutate(\n    Date = Date + days(1),\n    Rain..in. = 0\n  )\n\n# Combine original and new rows\ndf_extended &lt;- bind_rows(E3_rain_data, extra_days) %&gt;%\n  arrange(storm_number, Date)\n\n#merge rain data and well data\nE3all&lt;-merge(E3W,df_extended,by=\"Date\",all.x=FALSE,all.y=TRUE)\n\n# Step 1: Extract unique rainfall per day per storm\nE3_daily_rainfall &lt;- E3all %&gt;%\n  select(Date, storm_number, Rain..in.) %&gt;%\n  distinct() %&gt;%\n  filter(!is.na(storm_number))\n\nE3_daily_rainfall$wtr_yr&lt;-calcWaterYear(E3_daily_rainfall$Date) #Calc water year\n\n# Step 2: Sum rainfall per storm using cleaned daily data\nE3_storm_rainfall_summary &lt;- E3_daily_rainfall %&gt;%\n  group_by(storm_number,wtr_yr) %&gt;%\n  summarise(\n    total_rainfall = sum(Rain..in., na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Step 3: Get well depth stats (from full merged data)\nE3_well_depth_summary &lt;- E3all %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(storm_number) %&gt;%\n  summarise(\n    min_well_depth = min(ft..below.ground., na.rm = TRUE),\n    max_well_depth = max(ft..below.ground., na.rm = TRUE),\n    max_intensity=max(Rain..in.,na.rm=TRUE),\n    .groups = \"drop\"\n  )\n\nWarning: There were 10 warnings in `summarise()`.\nThe first warning was:\nℹ In argument: `min_well_depth = min(ft..below.ground., na.rm = TRUE)`.\nℹ In group 20: `storm_number = 20`.\nCaused by warning in `min()`:\n! no non-missing arguments to min; returning Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 9 remaining warnings.\n\n# Step 4: Join rainfall and well depth summaries\nE3_storm_summary &lt;- left_join(E3_well_depth_summary, E3_storm_rainfall_summary, by = \"storm_number\")\n#Calculate difference in well depth\nE3_storm_summary$well_change&lt;-E3_storm_summary$max_well_depth-E3_storm_summary$min_well_depth\n#change to df so I can read it all\nE3_storm_summary&lt;-as.data.frame(E3_storm_summary)\n\n#Take water year into account when calculating storm number\nE3_data_with_storm_year &lt;- E3_storm_summary %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(wtr_yr, storm_number) %&gt;%  # make sure storm_number isn't repeated per storm\n  summarise(.groups = \"drop_last\") %&gt;%     # drop after storm_number to keep water_year grouping\n  arrange(wtr_yr, storm_number) %&gt;%\n  mutate(storm_in_year = row_number()) %&gt;%\n  ungroup()\n\n# Now join back to original data\nE3_final_data &lt;- E3_storm_summary %&gt;%\n  left_join(E3_data_with_storm_year %&gt;% select(wtr_yr, storm_number,storm_in_year),\n            by = c(\"wtr_yr\", \"storm_number\"))\n\nE3_final_data$Site&lt;-\"Escondido 3\" #add site neame so i can merge with others later on.\n\nr&lt;-ggplot(E3_final_data)+geom_point(aes(x=total_rainfall,y=well_change,color = max_intensity, size=-storm_in_year))+\n  scale_color_gradient(low = \"lightyellow\", high = \"red3\", name = \"max storm intensity (in/day)\")+theme_bw()+\n  ggtitle(\"Rainfall Intensity and Well Water Recharge\")\n\n\nE5R&lt;-read.csv(\"data/rain/Escondido 5 Rain Gauge Rain Gauge 20231001-20250417.csv\")\nE5R$Date&lt;-as.POSIXct(E5R$Date, format=\"%Y-%m-%d\")\nE5R&lt;-E5R %&gt;% arrange(E5R$Date)\nE5R$Location&lt;-\"Escondido 5\"\n#Uploading rain data from new device\nE5RN&lt;-read.csv(\"data/rain/Dangermond- Escondido 5 new Rain Gauge 20231001-20250417.csv\")\nE5RN$Date&lt;-as.POSIXct(E5RN$Date, format=\"%Y-%m-%d\")\nE5RN&lt;-E5RN %&gt;% arrange(E5RN$Date)\nE5RN$Location&lt;-\"Escondido 5\"\nE5R&lt;-merge(E5R,E5RN,all.x=TRUE,all.y=TRUE) #Merge the 2 rain datasets together\n\n#Uploading well data\nE5W&lt;-read.csv(\"data/Well/Dangermond- Escondido 5 Well 20231001-20250417.csv\")\nE5W$Date.and.Time&lt;-as.POSIXct(E5W$Date.and.Time,format=\"%Y-%m-%d %H:%M:%S\")\nE5W$Date&lt;-format(E5W$Date.and.Time,format=\"%Y-%m-%d\")\nE5W$Date&lt;-as.POSIXct(E5W$Date,format=\"%Y-%m-%d\")\n\n#Adjusting escondido 5 well depth data for differential\nE5W &lt;- E5W %&gt;%\n  mutate(ft..below.ground. = ifelse(ft..below.ground. &lt; 20, ft..below.ground. + 56, ft..below.ground.))\nE5W&lt;-E5W[E5W$ft..below.ground.&gt;=53&E5W$ft..below.ground.&lt;=70,]\n\n##Making plot of rainfall quantity and groundwater depth increase\nE5&lt;-merge(E5R,E5W,by=\"Date\",all.x=TRUE,all.y=TRUE)\nE5Whr&lt;-E5W\n\n\n#Preparing to make scatter plot of change in well depth~total storm rainfall\n# Create storm number for days with more than 0.1 in of rain\nE5_rain_data &lt;- E5R %&gt;%\n  mutate(\n    rainy = Rain..in. &gt; 0.15,\n    gap = !rainy,  # identifies dry days\n    storm_group = cumsum(lag(gap, default = TRUE) & rainy)  # increment on first rainy day after dry\n  ) %&gt;%\n  mutate(\n    storm_number = ifelse(rainy, storm_group, NA)  # only assign storm number to rainy days\n  )\n\nE5_rain_data &lt;- E5_rain_data %&gt;%\n  filter(!is.na(storm_number))\n\nextra_days &lt;- E5_rain_data %&gt;%\n  group_by(storm_number) %&gt;%\n  slice_tail(n = 1) %&gt;%\n  mutate(\n    Date = Date + days(1),\n    Rain..in. = 0\n  )\n\n# Combine original and new rows\ndf_extended &lt;- bind_rows(E5_rain_data, extra_days) %&gt;%\n  arrange(storm_number, Date)\n\n#merge rain data and well data\nE5all&lt;-merge(E5Whr,E5_rain_data,by=\"Date\",all.x=FALSE,all.y=TRUE)\n\n# Step 1: Extract unique rainfall per day per storm\ndaily_rainfall &lt;- E5all %&gt;%\n  select(Date, storm_number, Rain..in.) %&gt;%\n  distinct() %&gt;%\n  filter(!is.na(storm_number))\n\ndaily_rainfall$wtr_yr&lt;-calcWaterYear(daily_rainfall$Date) #Calc water year\n\n# Step 2: Sum rainfall per storm using cleaned daily data\nstorm_rainfall_summary &lt;- daily_rainfall %&gt;%\n  group_by(storm_number,wtr_yr) %&gt;%\n  summarise(\n    total_rainfall = sum(Rain..in., na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Step 3: Get well depth stats (from full merged data)\nwell_depth_summary &lt;- E5all %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(storm_number) %&gt;%\n  summarise(\n    min_well_depth = min(ft..below.ground., na.rm = TRUE),\n    max_well_depth = max(ft..below.ground., na.rm = TRUE),\n    max_intensity=max(Rain..in.,na.rm=TRUE),\n    .groups = \"drop\"\n  )\n\n# Step 4: Join rainfall and well depth summaries\nstorm_summary &lt;- left_join(well_depth_summary, storm_rainfall_summary, by = \"storm_number\")\n#Calculate difference in well depth\nstorm_summary$well_change&lt;-storm_summary$max_well_depth-storm_summary$min_well_depth\n#change to df so I can read it all\nstorm_summary&lt;-as.data.frame(storm_summary)\n\n\n#Take water year into account when calculating storm number\ndata_with_storm_year &lt;- storm_summary %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(wtr_yr, storm_number) %&gt;%  # make sure storm_number isn't repeated per storm\n  summarise(.groups = \"drop_last\") %&gt;%     # drop after storm_number to keep water_year grouping\n  arrange(wtr_yr, storm_number) %&gt;%\n  mutate(storm_in_year = row_number()) %&gt;%\n  ungroup()\n\n# Now join back to original data\nE5_final_data &lt;- storm_summary %&gt;%\n  left_join(data_with_storm_year %&gt;% select(wtr_yr, storm_number, storm_in_year),\n            by = c(\"wtr_yr\", \"storm_number\"))\n\nE5_final_data$Site&lt;-\"Escondido 5\" #add site neame so i can merge with others later on.\n\nr&lt;-ggplot(E5_final_data)+geom_point(aes(x=total_rainfall,y=well_change,color = max_intensity, size=-storm_in_year))+\n  scale_color_gradient(low = \"lightyellow\", high = \"red3\", name = \"max storm intensity (in/day)\")+theme_bw()+\n  ggtitle(\"Rainfall Intensity and Well Water Recharge\")\n\n\n#Uploading rain data\nE2R&lt;-read.csv(\"data/rain/Dangermond- Escondido 2 Rain Gauge 20231101-20250408.csv\")\nE2R$Date&lt;-as.POSIXct(E2R$Date, format=\"%Y-%m-%d\")\nE2R&lt;-E2R %&gt;% arrange(E2R$Date)\nE2R$Location&lt;-\"Escondido 2\"\n\n#Uploading well data\nE2W&lt;-read.csv(\"data/Well/Dangermond- Escondido 2 Well 20240101-20250214.csv\")\nE2W$Date.and.Time&lt;-as.POSIXct(E2W$Date.and.Time,format=\"%Y-%m-%d %H:%M:%S\")\nE2W$Date&lt;-format(E2W$Date.and.Time,format=\"%Y-%m-%d\")\nE2W$Date&lt;-as.POSIXct(E2W$Date,format=\"%Y-%m-%d\")\nE2Whr&lt;-E2W\n\n\n#Preparing to make scatter plot of change in well depth~total storm rainfall\n# Create storm number for days with more than 0.1 in of rain\nE2_rain_data &lt;- E2R %&gt;%\n  mutate(\n    rainy = Rain..in. &gt; 0.15,\n    gap = !rainy,  # identifies dry days\n    storm_group = cumsum(lag(gap, default = TRUE) & rainy)  # increment on first rainy day after dry\n  ) %&gt;%\n  mutate(\n    storm_number = ifelse(rainy, storm_group, NA)  # only assign storm number to rainy days\n  )\n\nE2_rain_data &lt;- E2_rain_data %&gt;%\n  filter(!is.na(storm_number))\n\nextra_days &lt;- E2_rain_data %&gt;%\n  group_by(storm_number) %&gt;%\n  slice_tail(n = 1) %&gt;%\n  mutate(\n    Date = Date + days(1),\n    Rain..in. = 0\n  )\n\n# Combine original and new rows\ndf_extended &lt;- bind_rows(E2_rain_data, extra_days) %&gt;%\n  arrange(storm_number, Date)\n\n#merge rain data and well data\nE2all&lt;-merge(E2Whr,E2_rain_data,by=\"Date\",all.x=FALSE,all.y=TRUE)\n\n# Step 1: Extract unique rainfall per day per storm\nE2_daily_rainfall &lt;- E2all %&gt;%\n  select(Date, storm_number, Rain..in.) %&gt;%\n  distinct() %&gt;%\n  filter(!is.na(storm_number))\n\nE2_daily_rainfall$wtr_yr&lt;-calcWaterYear(E2_daily_rainfall$Date) #Calc water year\n\n# Step 2: Sum rainfall per storm using cleaned daily data\nE2_storm_rainfall_summary &lt;- E2_daily_rainfall %&gt;%\n  group_by(storm_number,wtr_yr) %&gt;%\n  summarise(\n    total_rainfall = sum(Rain..in., na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n\n# Step 3: Get well depth stats (from full merged data)\nE2_well_depth_summary &lt;- E2all %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(storm_number) %&gt;%\n  summarise(\n    min_well_depth = min(ft..below.ground., na.rm = TRUE),\n    max_well_depth = max(ft..below.ground., na.rm = TRUE),\n    max_intensity=max(Rain..in.,na.rm=TRUE),\n    .groups = \"drop\"\n  )\n\nWarning: There were 10 warnings in `summarise()`.\nThe first warning was:\nℹ In argument: `min_well_depth = min(ft..below.ground., na.rm = TRUE)`.\nℹ In group 20: `storm_number = 20`.\nCaused by warning in `min()`:\n! no non-missing arguments to min; returning Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 9 remaining warnings.\n\n# Step 4: Join rainfall and well depth summaries\nE2_storm_summary &lt;- left_join(E2_well_depth_summary, E2_storm_rainfall_summary, by = \"storm_number\")\n#Calculate difference in well depth\nE2_storm_summary$well_change&lt;-E2_storm_summary$max_well_depth-E2_storm_summary$min_well_depth\n#change to df so I can read it all\nE2_storm_summary&lt;-as.data.frame(E2_storm_summary)\n\n#Take water year into account when calculating storm number\nE2_data_with_storm_year &lt;- E2_storm_summary %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(wtr_yr, storm_number) %&gt;%  # make sure storm_number isn't repeated per storm\n  summarise(.groups = \"drop_last\") %&gt;%     # drop after storm_number to keep water_year grouping\n  arrange(wtr_yr, storm_number) %&gt;%\n  mutate(storm_in_year = row_number()) %&gt;%\n  ungroup()\n\n# Now join back to original data\nE2_final_data &lt;- E2_storm_summary %&gt;%\n  left_join(data_with_storm_year %&gt;% select(wtr_yr, storm_number, storm_in_year),\n            by = c(\"wtr_yr\", \"storm_number\"))\n\nE2_final_data$Site&lt;-\"Escondido 2\" #add site neame so i can merge with others later on.\n\n\n#Uploading rain data\nO5R&lt;-read.csv(\"data/rain/Dangermond- Oaks 5 Rain Gauge 20240131-20250401.csv\")\nO5R$Date&lt;-as.POSIXct(O5R$Date, format=\"%Y-%m-%d\")\nO5R&lt;-O5R %&gt;% arrange(O5R$Date)\nO5R$Location&lt;-\"Oaks 5\"\n\n#Uploading well data\nO5W&lt;-read.csv(\"data/Well/Dangermond- Oaks 5 Well 20240101-20250214.csv\")\nO5W$Date.and.Time&lt;-as.POSIXct(O5W$Date.and.Time,format=\"%Y-%m-%d %H:%M:%S\")\nO5W$Date&lt;-format(O5W$Date.and.Time,format=\"%Y-%m-%d\")\nO5W$Date&lt;-as.POSIXct(O5W$Date,format=\"%Y-%m-%d\")\nO5Whr&lt;-O5W\n\n\n#Preparing to make scatter plot of change in well depth~total storm rainfall\n# Create storm number for days with more than 0.1 in of rain\nO5_rain_data &lt;- O5R %&gt;%\n  mutate(\n    rainy = Rain..in. &gt; 0.15,\n    gap = !rainy,  # identifies dry days\n    storm_group = cumsum(lag(gap, default = TRUE) & rainy)  # increment on first rainy day after dry\n  ) %&gt;%\n  mutate(\n    storm_number = ifelse(rainy, storm_group, NA)  # only assign storm number to rainy days\n  )\n\nO5_rain_data &lt;- O5_rain_data %&gt;%\n  filter(!is.na(storm_number))\n\nextra_days &lt;- O5_rain_data %&gt;%\n  group_by(storm_number) %&gt;%\n  slice_tail(n = 1) %&gt;%\n  mutate(\n    Date = Date + days(1),\n    Rain..in. = 0\n  )\n\n# Combine original and new rows\ndf_extended &lt;- bind_rows(O5_rain_data, extra_days) %&gt;%\n  arrange(storm_number, Date)\n\n#merge rain data and well data\nO5all&lt;-merge(O5Whr,O5_rain_data,by=\"Date\",all.x=FALSE,all.y=TRUE)\n\n# Step 1: Extract unique rainfall per day per storm\nO5_daily_rainfall &lt;- O5all %&gt;%\n  select(Date, storm_number, Rain..in.) %&gt;%\n  distinct() %&gt;%\n  filter(!is.na(storm_number))\n\nO5_daily_rainfall$wtr_yr&lt;-calcWaterYear(O5_daily_rainfall$Date) #Calc water year\n\n# Step 2: Sum rainfall per storm using cleaned daily data\nO5_storm_rainfall_summary &lt;- O5_daily_rainfall %&gt;%\n  group_by(storm_number,wtr_yr) %&gt;%\n  summarise(\n    total_rainfall = sum(Rain..in., na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n\n# Step 3: Get well depth stats (from full merged data)\nO5_well_depth_summary &lt;- O5all %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(storm_number) %&gt;%\n  summarise(\n    min_well_depth = min(ft..below.ground., na.rm = TRUE),\n    max_well_depth = max(ft..below.ground., na.rm = TRUE),\n    max_intensity=max(Rain..in.,na.rm=TRUE),\n    .groups = \"drop\"\n  )\n\nWarning: There were 10 warnings in `summarise()`.\nThe first warning was:\nℹ In argument: `min_well_depth = min(ft..below.ground., na.rm = TRUE)`.\nℹ In group 20: `storm_number = 20`.\nCaused by warning in `min()`:\n! no non-missing arguments to min; returning Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 9 remaining warnings.\n\n# Step 4: Join rainfall and well depth summaries\nO5_storm_summary &lt;- left_join(O5_well_depth_summary, O5_storm_rainfall_summary, by = \"storm_number\")\n#Calculate difference in well depth\nO5_storm_summary$well_change&lt;-O5_storm_summary$max_well_depth-O5_storm_summary$min_well_depth\n#change to df so I can read it all\nO5_storm_summary&lt;-as.data.frame(O5_storm_summary)\n\n#Take water year into account when calculating storm number\nO5_data_with_storm_year &lt;- O5_storm_summary %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(wtr_yr, storm_number) %&gt;%  # make sure storm_number isn't repeated per storm\n  summarise(.groups = \"drop_last\") %&gt;%     # drop after storm_number to keep water_year grouping\n  arrange(wtr_yr, storm_number) %&gt;%\n  mutate(storm_in_year = row_number()) %&gt;%\n  ungroup()\n\n# Now join back to original data\nO5_final_data &lt;- O5_storm_summary %&gt;%\n  left_join(data_with_storm_year %&gt;% select(wtr_yr, storm_number, storm_in_year),\n            by = c(\"wtr_yr\", \"storm_number\"))\n\nO5_final_data$Site&lt;-\"Oaks 5\" #add site neame so i can merge with others later on.\n\nr&lt;-ggplot(O5_final_data)+geom_point(aes(x=total_rainfall,y=well_change,color = max_intensity, size=-storm_in_year))+\n  scale_color_gradient(low = \"lightyellow\", high = \"red3\", name = \"max storm intensity (in/day)\")+theme_bw()+\n  ggtitle(\"Rainfall Intensity and Well Water Recharge\")\n\n\n#Uploading rain data\nT3R&lt;-read.csv(\"data/rain/Dangermond- Tinta 3  Rain Gauge 20241001-20250214.csv\")\nT3R$Date&lt;-as.POSIXct(T3R$Date, format=\"%Y-%m-%d\")\nT3R&lt;-T3R %&gt;% arrange(T3R$Date)\nT3R$Location&lt;-\"Tinta 3\"\n\n#Uploading well data\nT3W&lt;-read.csv(\"data/Well/Dangermond- Tinta 3 Well 20241030-20250401.csv\")\nT3W$Date.and.Time&lt;-as.POSIXct(T3W$Date.and.Time,format=\"%Y-%m-%d %H:%M:%S\")\nT3W$Date&lt;-format(T3W$Date.and.Time,format=\"%Y-%m-%d\")\nT3W$Date&lt;-as.POSIXct(T3W$Date,format=\"%Y-%m-%d\")\nT3Whr&lt;-T3W\n\n\n#Preparing to make scatter plot of change in well depth~total storm rainfall\n# Create storm number for days with more than 0.1 in of rain\nT3_rain_data &lt;- T3R %&gt;%\n  mutate(\n    rainy = Rain..in. &gt; 0.15,\n    gap = !rainy,  # identifies dry days\n    storm_group = cumsum(lag(gap, default = TRUE) & rainy)  # increment on first rainy day after dry\n  ) %&gt;%\n  mutate(\n    storm_number = ifelse(rainy, storm_group, NA)  # only assign storm number to rainy days\n  )\n\nT3_rain_data &lt;- T3_rain_data %&gt;%\n  filter(!is.na(storm_number))\n\nextra_days &lt;- T3_rain_data %&gt;%\n  group_by(storm_number) %&gt;%\n  slice_tail(n = 1) %&gt;%\n  mutate(\n    Date = Date + days(1),\n    Rain..in. = 0\n  )\n\ndf_extended &lt;- bind_rows(T3_rain_data, extra_days) %&gt;%\n  arrange(storm_number, Date)# Combine original and new rows\n\nT3all&lt;-merge(T3Whr,T3_rain_data,by=\"Date\",all.x=FALSE,all.y=TRUE) #merge rain data and well data\n\nT3_daily_rainfall &lt;- T3all %&gt;%\n  select(Date, storm_number, Rain..in.) %&gt;%\n  distinct() %&gt;%\n  filter(!is.na(storm_number))#Extract unique rainfall per day per storm\n\nT3_daily_rainfall$wtr_yr&lt;-calcWaterYear(T3_daily_rainfall$Date) #Calc water year\n\n# Step 2: Sum rainfall per storm using cleaned daily data\nT3_storm_rainfall_summary &lt;- T3_daily_rainfall %&gt;%\n  group_by(storm_number,wtr_yr) %&gt;%\n  summarise(\n    total_rainfall = sum(Rain..in., na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n\n# Step 3: Get well depth stats (from full merged data)\nT3_well_depth_summary &lt;- T3all %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(storm_number) %&gt;%\n  summarise(\n    min_well_depth = min(ft..below.ground., na.rm = TRUE),\n    max_well_depth = max(ft..below.ground., na.rm = TRUE),\n    max_intensity=max(Rain..in.,na.rm=TRUE),\n    .groups = \"drop\"\n  )\n\n# Step 4: Join rainfall and well depth summaries\nT3_storm_summary &lt;- left_join(T3_well_depth_summary, T3_storm_rainfall_summary, by = \"storm_number\")\n#Calculate difference in well depth\nT3_storm_summary$well_change&lt;-T3_storm_summary$max_well_depth-T3_storm_summary$min_well_depth\n#change to df so I can read it all\nT3_storm_summary&lt;-as.data.frame(T3_storm_summary)\n\n#Take water year into account when calculating storm number\nT3_data_with_storm_year &lt;- T3_storm_summary %&gt;%\n  filter(!is.na(storm_number)) %&gt;%\n  group_by(wtr_yr, storm_number) %&gt;%  # make sure storm_number isn't repeated per storm\n  summarise(.groups = \"drop_last\") %&gt;%     # drop after storm_number to keep water_year grouping\n  arrange(wtr_yr, storm_number) %&gt;%\n  mutate(storm_in_year = row_number()) %&gt;%\n  ungroup()\n\n# Now join back to original data\nT3_final_data &lt;- T3_storm_summary %&gt;%\n  left_join(T3_data_with_storm_year %&gt;% select(wtr_yr, storm_number, storm_in_year),\n            by = c(\"wtr_yr\", \"storm_number\"))\n\nT3_final_data$Site&lt;-\"Tinta 3\" #add site neame so i can merge with others later on.\n\nr&lt;-ggplot(T3_final_data)+geom_point(aes(x=total_rainfall,y=well_change,color = storm_in_year),size=3)+\n  scale_color_gradient(low = \"lightyellow\", high = \"red3\", name = \"Storm # in Year\")+theme_bw()+\n  ggtitle(\"Rainfall Intensity and Well Water Recharge\")\n\n\nall_final_data&lt;-rbind(E5_final_data,E3_final_data)\nall_final_data&lt;-rbind(all_final_data,E2_final_data)\nall_final_data&lt;-rbind(all_final_data,O5_final_data)\nall_final_data&lt;-rbind(all_final_data,T3_final_data)\n\na&lt;-ggplot(all_final_data)+\n  geom_point(aes(x=total_rainfall,y=well_change,color = max_intensity, size=-storm_in_year,\n                 text = paste0(\"&lt;br&gt;Total Rain (in): \", total_rainfall, \" in\",\n                    \"&lt;br&gt;Storm Number: \", storm_number,\n                    \"&lt;br&gt;Site: \", Site,\"&lt;br&gt;Max Intensity: \", max_intensity, \" in/day\",\n                    \"&lt;br&gt;Well Change: \", well_change, \" feet\")))+\n  scale_color_gradient(low = \"lightyellow\", high = \"red3\", name = \"Max Storm intensity (in/hr)\") +\n  scale_size_continuous(name = \"Storm number in Year\")+theme_bw()+\n  ggtitle(\"Rainfall Intensity and Well Water Rise\")\n\nWarning in geom_point(aes(x = total_rainfall, y = well_change, color =\nmax_intensity, : Ignoring unknown aesthetics: text\n\nggplotly(a,tooltip = \"text\")",
    "crumbs": [
      "Rainfall and Well Depth"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CalGRO-Dashboard",
    "section": "",
    "text": "Welcome to CalGRO!!!\nIn the recharge tab:\nEstimating ground water recharge using the water-table fluctuation (WTF) method https://water.usgs.gov/ogw/gwrp/methods/wtf/. We are assuming the extrapolated antecedent recession curve is continuous with the water depth at start date, since we do not have any dry season historic data to base our measurements on.\nIn the Well depth and Rainfall tab:\nEach storm is considered consecutive days with 0.1 or more inches of rain. For each storm the change in well depth and total rainfall is calculated and plotted.",
    "crumbs": [
      "Home"
    ]
  }
]