---
title: "Python Auto Render"
format: 
  dashboard: 
    logo: "logo/brenlogo.png"
    orientation: columns
---
```{r,library}
library(reticulate)
library(ggplot2)
library(tidyverse)
library(plotly)             
#library(reactable)
#library(bslib)
library(dplyr)
#library(leaflet)
#library(bsicons)
#library(shiny)
library(ggplot2)
library(readr)

if (nzchar(Sys.getenv("GITHUB_ACTIONS"))) {
  use_python(Sys.which("python"), required = TRUE)
} else {
  use_python("C:/Users/ricka/anaconda3/python.exe", required = TRUE)
}

```



```{python, loaddata}
# If in the same folder:
import myfunctions
from myfunctions import time_format

# Use a function
E2wellDepth = '66439575eb2fb4cd16ab5316'
E2Rainfall = '66439fec826756b8928ced5e'

E2rain = myfunctions.get_datapoints(E2Rainfall,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
E2Well = myfunctions.get_datapoints(E2wellDepth,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

# Use a function
E3wellDepth = '6511f7ea55264589773edcdb'
E3Rainfall = '6643edfcc05ad60e4a75f58e'

E3rain = myfunctions.get_datapoints('6643edfcc05ad60e4a75f58e',"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

E3Well = myfunctions.get_datapoints('6643edfc71c87f2d574b0a35',"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

# Use a function
E5well_ID = '6643edfd63d3626df7281fac'
E5Rainfall_ID = '6643edfc8267564e618cedd2'

E5rain = myfunctions.get_datapoints(E5Rainfall_ID,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
E5Well = myfunctions.get_datapoints(E5well_ID,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

# Use a function

O2Rainfall_ID = '6643edfe826756aade8cedd4'
O2rain = myfunctions.get_datapoints(O2Rainfall_ID,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

# Use a function
T2well_ID = '6643edffc05ad633d275f592'
T2Well = myfunctions.get_datapoints(T2well_ID,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

# Use a function
T5well_ID = '6643edfd63d3626df7281fac'
T5Rainfall_ID = '6643edff826756530b8cedd7'

T5rain = myfunctions.get_datapoints(T5Rainfall_ID,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
T5Well = myfunctions.get_datapoints(T5well_ID,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

# Use a function
T6well_ID = '6643ee00c05ad6117675f594'
T6Rainfall_ID = '6643ee00ab0417d848e36022'

T6rain = myfunctions.get_datapoints(T6Rainfall_ID,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
T6Well = myfunctions.get_datapoints(T6well_ID,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

##nEWONES
# Use a function
JVwellDepth = '6643edfd604ca19527c90ab2'
JVRainfall = '6643edfd71c87fcf1f4b0a37'

JVrain = myfunctions.get_datapoints(JVRainfall,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
JVWell = myfunctions.get_datapoints(JVwellDepth,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

# Use a function
QCwellDepth = '68678daeda5b0c3b96763f5f'
QCRainfall = '68678daef044bf5f040d7fd5'

QCrain = myfunctions.get_datapoints(QCRainfall,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
QCWell = myfunctions.get_datapoints(QCwellDepth,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

# Use a function
O5wellDepth = '6643edfeeb2fb4419cab5396'
O5Rainfall = '6643edfeab04177761e3601f'

O5rain = myfunctions.get_datapoints(O5Rainfall,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
O5Well = myfunctions.get_datapoints(O5wellDepth,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
#O1,3,4, well data not available

#T3
T3wellDepth = '68678db07b005b2f782f4a36'
T3Rainfall = '68678db0676af7290120ccfb'

T3rain = myfunctions.get_datapoints(T3Rainfall,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
T3Well = myfunctions.get_datapoints(T3wellDepth,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

#T5
T5wellDepth = '6643ee0063d3623b8a281fb0'
T5Rainfall = '6643edff826756530b8cedd7'

T5rain = myfunctions.get_datapoints(T5Rainfall,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
T5Well = myfunctions.get_datapoints(T5wellDepth,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')

#T11A
T11wellDepth = '68678db07b005b2f782f4a36'
T11Rainfall =  '68678db0676af7290120ccfb'

T11rain = myfunctions.get_datapoints(T11Rainfall,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
T11Well = myfunctions.get_datapoints(T11wellDepth,"2024-02-01T00:00:00",ends_before=time_format(),time_type ='local',name='default')
#1,4,10,11a,11b
```

## Column {width="33%"}

```{r, TRANSFORMDATA}
#E2
E2rain_r<-py$E2rain
colnames(E2rain_r)<-c("DateTime_utc","Rainfall_mm")
E2well<-py$E2Well
colnames(E2well)<-c("DateTime_utc","Depth_to_GW")
E2well<-as.data.frame(E2well)
E2well<-E2well[,1:2]
E2rain_r<-E2rain_r[,1:2]

#E3
E3rain_r<-py$E3rain
colnames(E3rain_r)<-c("DateTime_utc","Rainfall_mm")
E3well<-py$E3Well
colnames(E3well)<-c("DateTime_utc","Depth_to_GW")
E3well<-E3well[,1:2]
E3rain_r<-E3rain_r[,1:2]

#E5
E5rain_r<-py$E5rain
colnames(E5rain_r)<-c("DateTime_utc","Rainfall_mm")
E5well<-py$E5Well
colnames(E5well)<-c("DateTime_utc","Depth_to_GW")
E5well<-E5well[,1:2]
E5rain_r<-E5rain_r[,1:2]

#O2
O2rain_r<-py$O2rain
colnames(O2rain_r)<-c("DateTime_utc","Rainfall_mm")
O2rain_r<-O2rain_r[,1:2]

#T2
T2well<-py$T2Well
colnames(T2well)<-c("DateTime_utc","Depth_to_GW")
T2well<-T2well[,1:2]

#T5
T5rain_r<-py$T5rain
colnames(T5rain_r)<-c("DateTime_utc","Rainfall_mm")
T5well<-py$T5Well
colnames(T5well)<-c("DateTime_utc","Depth_to_GW")
T5well<-T5well[,1:2]
T5rain_r<-T5rain_r[,1:2]

#T6
T6rain_r<-py$T6rain
colnames(T6rain_r)<-c("DateTime_utc","Rainfall_mm")
T6well<-py$T6Well
colnames(T6well)<-c("DateTime_utc","Depth_to_GW")
T6well<-T6well[,1:2]
T6rain_r<-T6rain_r[,1:2]

#JV
JVrain_r<-py$JVrain
colnames(JVrain_r)<-c("DateTime_utc","Rainfall_mm")
JVwell<-py$JVWell
colnames(JVwell)<-c("DateTime_utc","Depth_to_GW")
JVwell<-JVwell[,1:2]
JVrain_r<-JVrain_r[,1:2]

#QC
QCrain_r<-py$QCrain
colnames(QCrain_r)<-c("DateTime_utc","Rainfall_mm")
QCwell<-py$QCWell
colnames(QCwell)<-c("DateTime_utc","Depth_to_GW")
QCwell<-QCwell[,1:2]
QCrain_r<-QCrain_r[,1:2]

#O5
O5rain_r<-py$O5rain
colnames(O5rain_r)<-c("DateTime_utc","Rainfall_mm")
O5well<-py$O5Well
colnames(O5well)<-c("DateTime_utc","Depth_to_GW")
O5well<-O5well[,1:2]
O5rain_r<-O5rain_r[,1:2]

#t3
T3rain_r<-py$T3rain
colnames(T3rain_r)<-c("DateTime_utc","Rainfall_mm")
T3well<-py$T3Well
colnames(T3well)<-c("DateTime_utc","Depth_to_GW")
T3well<-T3well[,1:2]
T3rain_r<-T3rain_r[,1:2]

#T5
T5rain_r<-py$T5rain
colnames(T5rain_r)<-c("DateTime_utc","Rainfall_mm")
T5well<-py$T5Well
colnames(T5well)<-c("DateTime_utc","Depth_to_GW")
T5well<-T5well[,1:2]
T5rain_r<-T5rain_r[,1:2]

#T11
T11rain_r<-py$T11rain
colnames(T11rain_r)<-c("DateTime_utc","Rainfall_mm")
T11well<-py$T11Well
colnames(T11well)<-c("DateTime_utc","Depth_to_GW")
T11well<-T11well[,1:2]
T11rain_r<-T11rain_r[,1:2]
```
### Row {height="25%"}
```{r, escondido2plot}
# Prepare data for faceting
hourly_data_long <- E2well %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

E2rain_r$Date<-as.Date(E2rain_r$DateTime_utc)
E2rain_Daily<-aggregate(Rainfall_mm~Date,E2rain_r,FUN=sum)

daily_data_long <- E2rain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Escondido 2 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="25%"}
```{r,Escondido3plot}
# E3
hourly_data_long <- E3well %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

E3rain_r$Date<-as.Date(E3rain_r$DateTime_utc)
E3rain_Daily<-aggregate(Rainfall_mm~Date,E3rain_r,FUN=sum)

daily_data_long <- E3rain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Escondido 3 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="25%"}
```{r,escondido5plot}
# E5
hourly_data_long <- E5well %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

E5rain_r$Date<-as.Date(E5rain_r$DateTime_utc)
E5rain_Daily<-aggregate(Rainfall_mm~Date,E5rain_r,FUN=sum)

daily_data_long <- E5rain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Escondido 5 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="25%"}
```{r,t11}
# Prepare data for faceting
hourly_data_long <- T11well %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

T11rain_r$Date<-as.Date(T11rain_r$DateTime_utc)
T11rain_Daily<-aggregate(Rainfall_mm~Date,T11rain_r,FUN=sum)

daily_data_long <- T11rain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Tinta 11 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```


```{r, oaksplot}
# O2
b<-ggplot(O2rain_r, aes(x = DateTime_utc, y = Rainfall_mm)) +
  geom_col(fill = "lightblue") +
  scale_y_reverse()+
  labs(x = "Date", y = NULL, title = "Oaks 2 Rainfall") +
  theme_minimal()

#ggplotly(b)
```

## Column {width="33%"}

### Row {height="25%"}
```{r,Tinta6plot}
# T6
hourly_data_long <- T6well %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

T6rain_r$Date<-as.Date(T6rain_r$DateTime_utc)
T6rain_Daily<-aggregate(Rainfall_mm~Date,T6rain_r,FUN=sum)

daily_data_long <- T6rain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Tinta 6 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="25%"}
```{r,JVplot}
# Prepare data for faceting
hourly_data_long <- JVwell %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

JVrain_r$Date<-as.Date(JVrain_r$DateTime_utc)
JVrain_Daily<-aggregate(Rainfall_mm~Date,JVrain_r,FUN=sum)

daily_data_long <- JVrain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Jalama Vaqueros Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="25%"}
```{r, QCPLOT}
# Prepare data for faceting
hourly_data_long <- QCwell %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

QCrain_r$Date<-as.Date(QCrain_r$DateTime_utc)
QCrain_Daily<-aggregate(Rainfall_mm~Date,QCrain_r,FUN=sum)

daily_data_long <- QCrain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Quail Canyon Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```

## Column {width="33%"}

### Row {height="25%"}
```{r,t3}
# Prepare data for faceting
hourly_data_long <- T3well %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

T3rain_r$Date<-as.Date(T3rain_r$DateTime_utc)
T3rain_Daily<-aggregate(Rainfall_mm~Date,T3rain_r,FUN=sum)

daily_data_long <- T3rain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Tinta 3 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="25%"}
```{r,t5}
# Prepare data for faceting
hourly_data_long <- T5well %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

T5rain_r$Date<-as.Date(T5rain_r$DateTime_utc)
T5rain_Daily<-aggregate(Rainfall_mm~Date,T3rain_r,FUN=sum)

daily_data_long <- T5rain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Tinta 5 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```
### Row {height="25%"}
```{r, O5}
# Prepare data for faceting
hourly_data_long <- O5well %>%
  mutate(DateTime_utc = as.POSIXct(DateTime_utc),variable = "Water Depth", value = Depth_to_GW) %>%
  select(DateTime_utc, variable, value)

O5rain_r$Date<-as.Date(O5rain_r$DateTime_utc)
O5rain_Daily<-aggregate(Rainfall_mm~Date,O5rain_r,FUN=sum)

daily_data_long <- JVrain_Daily %>%
  mutate(DateTime_utc = as.POSIXct(Date), variable = "Rainfall", value = Rainfall_mm) %>%
  select(DateTime_utc, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

b<-ggplot(combined, aes(x = DateTime_utc, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue") +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Oaks 5 Well Depth and Rainfall") +
  theme_minimal()

ggplotly(b)
```



