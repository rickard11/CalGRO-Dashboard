---
title: "Welldepth and Rainfall"
format: 
  dashboard: 
    orientation: columns
---


# Water depth

```{r, loadE5data}
E5R<-read.csv("data/rain/Dangermond- Escondido 5 new Rain Gauge 20231001-20250417.csv")
E5R$Date<-as.POSIXct(E5R$Date, format="%Y-%m-%d")
E5R<-E5R %>% arrange(E5R$Date)
E5R$Location<-"Escondido 5"
#Uploading rain data from new device
E5RN<-read.csv("data/rain/Dangermond- Escondido 5 new Rain Gauge 20231001-20250417.csv")
E5RN$Date<-as.POSIXct(E5RN$Date, format="%Y-%m-%d")
E5RN<-E5RN %>% arrange(E5RN$Date)
E5RN$Location<-"Escondido 5"
E5R<-merge(E5R,E5RN,all.x=TRUE,all.y=TRUE) #Merge the 2 rain datasets together

#Uploading well data
E5W<-read.csv("data/Well/Dangermond- Escondido 5 Well 20231001-20250417.csv")
E5W$Date.and.Time<-as.POSIXct(E5W$Date.and.Time,format="%Y-%m-%d %H:%M:%S")
E5W$Date<-format(E5W$Date.and.Time,format="%Y-%m-%d")
E5W$Date<-as.POSIXct(E5W$Date,format="%Y-%m-%d")
#E5W<-aggregate(ft..below.ground.~Date,E5W,FUN=mean)

#Loading packages
library(dplyr)
library(dataRetrieval)
library(plotly)
library(ggplot2)

#Adjusting escondido 5 well depth data for differential
E5W <- E5W %>%
  mutate(ft..below.ground. = ifelse(ft..below.ground. < 20, ft..below.ground. + 56, ft..below.ground.))
E5W<-E5W[E5W$ft..below.ground.>=53&E5W$ft..below.ground.<=70,]
E5Whr<-E5W

##Making plot of rainfall quantity and groundwater depth increase
E5<-merge(E5R,E5W,by="Date",all.x=TRUE,all.y=TRUE)
```



```{r, variablecreate}
# Prepare data for faceting in figure Add variable column
hourly_data<-E5Whr
daily_data<-E5R
hourly_data_long <- hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

daily_data_long <- daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

combined <- bind_rows(hourly_data_long, daily_data_long)

#Plot the data
s<-ggplot(combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Escondido 5 Well Depth and Rainfall") +
  theme_minimal()
#nmake it interactive
ggplotly(s)
```

```{r, stormnumbers}
#Preparing to make scatter plot of change in well depth~total storm rainfall
# Create storm number for days with more than 0.1 in of rain
rain_data <- E5R %>%
  mutate(
    rainy = Rain..in. > 0.1,
    gap = !rainy,  # identifies dry days
    storm_group = cumsum(lag(gap, default = TRUE) & rainy)  # increment on first rainy day after dry
  ) %>%
  mutate(
    storm_number = ifelse(rainy, storm_group, NA)  # only assign storm number to rainy days
  )

rain_data <- rain_data %>%
  filter(!is.na(storm_number))
#merge rain data and well data
E5all<-merge(E5Whr,rain_data,by="Date",all.x=FALSE,all.y=TRUE)

# Step 1: Extract unique rainfall per day per storm
daily_rainfall <- E5all %>%
  select(Date, storm_number, Rain..in.) %>%
  distinct() %>%
  filter(!is.na(storm_number))

daily_rainfall$wtr_yr<-calcWaterYear(daily_rainfall$Date) #Calc water year

# Step 2: Sum rainfall per storm using cleaned daily data
storm_rainfall_summary <- daily_rainfall %>%
  group_by(storm_number,wtr_yr) %>%
  summarise(
    total_rainfall = sum(Rain..in., na.rm = TRUE),
    .groups = "drop"
  )

# Step 3: Get well depth stats (from full merged data)
well_depth_summary <- E5all %>%
  filter(!is.na(storm_number)) %>%
  group_by(storm_number) %>%
  summarise(
    min_well_depth = min(ft..below.ground., na.rm = TRUE),
    max_well_depth = max(ft..below.ground., na.rm = TRUE),
    .groups = "drop"
  )

# Step 4: Join rainfall and well depth summaries
storm_summary <- left_join(well_depth_summary, storm_rainfall_summary, by = "storm_number")
#Calculate difference in well depth
storm_summary$well_change<-storm_summary$max_well_depth-storm_summary$min_well_depth
#change to df so I can read it all
storm_summary<-as.data.frame(storm_summary)
storm_summary

#Take water year into account when calculating storm number
data_with_storm_year <- storm_summary %>%
  filter(!is.na(storm_number)) %>%
  group_by(wtr_yr, storm_number) %>%  # make sure storm_number isn't repeated per storm
  summarise(.groups = "drop_last") %>%     # drop after storm_number to keep water_year grouping
  arrange(wtr_yr, storm_number) %>%
  mutate(storm_in_year = row_number()) %>%
  ungroup()

# Now join back to original data
final_data <- storm_summary %>%
  left_join(data_with_storm_year %>% select(wtr_yr, storm_number, storm_in_year),
            by = c("wtr_yr", "storm_number"))

final_data$Site<-"Escondido 5" #add site neame so i can merge with others later on.

#ggplot(final_data)+geom_point(aes(x=total_rainfall,y=well_change,color = storm_in_year),size=3)+
#  scale_color_gradient(low = "lightyellow", high = "red3", name = "Storm # in #Year")+theme_bw()+
#  ggtitle("Rainfall Intensity and Well Water Recharge")
```


```{r,dataE3}
#Uploading rain data
E3R<-read.csv("data/rain/Dangermond- Escondido 3 Rain Gauge 20240131-20250401.csv")
E3R$Date<-as.POSIXct(E3R$Date, format="%Y-%m-%d")
E3R<-E3R %>% arrange(E3R$Date)
E3R$Location<-"Escondido 5"


#Uploading well data
E3W<-read.csv("data/Well/Dangermond- Escondido 3 Well 20240101-20250214.csv")
E3W$Date.and.Time<-as.POSIXct(E3W$Date.and.Time,format="%Y-%m-%d %H:%M:%S")
E3W$Date<-format(E3W$Date.and.Time,format="%Y-%m-%d")
E3W$Date<-as.POSIXct(E3W$Date,format="%Y-%m-%d")
E3W<-E3W[E3W$ft..below.ground.<70,]
E3Whr<-E3W
E3W<-aggregate(ft..below.ground.~Date,E3W,FUN=mean)
E3W<-E3W[E3W$ft..below.ground.<70,]

# Prepare data for faceting in figure Add variable column
E3_hourly_data<-E3Whr
E3_daily_data<-E3R
E3_hourly_data_long <- E3_hourly_data %>%
  mutate(Date.and.Time = as.POSIXct(Date.and.Time),variable = "Water Depth", value = ft..below.ground.) %>%
  select(Date.and.Time, variable, value)

E3_daily_data_long <- E3_daily_data %>%
  mutate(Date.and.Time = as.POSIXct(Date), variable = "Rainfall", value = Rain..in.) %>%
  select(Date.and.Time, variable, value)

E3_combined <- bind_rows(E3_hourly_data_long, E3_daily_data_long)

#Plot the data
t<-ggplot(E3_combined, aes(x = Date.and.Time, y = value)) +
  geom_line(data = filter(combined, variable == "Water Depth"), color = "navy") +
  geom_col(data = filter(combined, variable == "Rainfall"), fill = "lightblue", alpha = 0.6) +
  scale_y_reverse()+
  facet_wrap(~variable, ncol = 1, scales = "free_y") +
  labs(x = "Date", y = NULL, title = "Escondido 5 Well Depth and Rainfall") +
  theme_minimal()
#nmake it interactive
ggplotly(t)

#Preparing to make scatter plot of change in well depth~total storm rainfall
# Create storm number for days with more than 0.1 in of rain
E3_rain_data <- E3R %>%
  mutate(
    rainy = Rain..in. > 0.1,
    gap = !rainy,  # identifies dry days
    storm_group = cumsum(lag(gap, default = TRUE) & rainy)  # increment on first rainy day after dry
  ) %>%
  mutate(
    storm_number = ifelse(rainy, storm_group, NA)  # only assign storm number to rainy days
  )

E3_rain_data <- E3_rain_data %>%
  filter(!is.na(storm_number))
#merge rain data and well data
E3all<-merge(E3Whr,E3_rain_data,by="Date",all.x=FALSE,all.y=TRUE)

# Step 1: Extract unique rainfall per day per storm
E3_daily_rainfall <- E3all %>%
  select(Date, storm_number, Rain..in.) %>%
  distinct() %>%
  filter(!is.na(storm_number))

E3_daily_rainfall$wtr_yr<-calcWaterYear(E3_daily_rainfall$Date) #Calc water year

# Step 2: Sum rainfall per storm using cleaned daily data
E3_storm_rainfall_summary <- E3_daily_rainfall %>%
  group_by(storm_number,wtr_yr) %>%
  summarise(
    total_rainfall = sum(Rain..in., na.rm = TRUE),
    .groups = "drop"
  )

# Step 3: Get well depth stats (from full merged data)
E3_well_depth_summary <- E3all %>%
  filter(!is.na(storm_number)) %>%
  group_by(storm_number) %>%
  summarise(
    min_well_depth = min(ft..below.ground., na.rm = TRUE),
    max_well_depth = max(ft..below.ground., na.rm = TRUE),
    .groups = "drop"
  )

# Step 4: Join rainfall and well depth summaries
E3_storm_summary <- left_join(E3_well_depth_summary, E3_storm_rainfall_summary, by = "storm_number")
#Calculate difference in well depth
E3_storm_summary$well_change<-E3_storm_summary$max_well_depth-E3_storm_summary$min_well_depth
#change to df so I can read it all
E3_storm_summary<-as.data.frame(E3_storm_summary)
E3_storm_summary

#Take water year into account when calculating storm number
E3_data_with_storm_year <- E3_storm_summary %>%
  filter(!is.na(storm_number)) %>%
  group_by(wtr_yr, storm_number) %>%  # make sure storm_number isn't repeated per storm
  summarise(.groups = "drop_last") %>%     # drop after storm_number to keep water_year grouping
  arrange(wtr_yr, storm_number) %>%
  mutate(storm_in_year = row_number()) %>%
  ungroup()

# Now join back to original data
E3_final_data <- E3_storm_summary %>%
  left_join(data_with_storm_year %>% select(wtr_yr, storm_number, storm_in_year),
            by = c("wtr_yr", "storm_number"))

E3_final_data$Site<-"Escondido 3" #add site neame so i can merge with others later on.

ggplot(E3_final_data)+geom_point(aes(x=total_rainfall,y=well_change,color = storm_in_year),size=3)+
  scale_color_gradient(low = "lightyellow", high = "red3", name = "Storm # in Year")+theme_bw()+
  ggtitle("Rainfall Intensity and Well Water Recharge")
```


```{r,mergesites}
all_final_data<-rbind(final_data,E3_final_data)

a<-ggplot(all_final_data)+
  geom_point(aes(x=total_rainfall,y=well_change,color = storm_in_year,shape=Site),size=3)+
  scale_color_gradient(low = "yellow", high = "red3", name = "Storm # in Year")+theme_bw()+
  ggtitle("Rainfall Intensity and Well Water Rise")
ggplotly(a)

```

